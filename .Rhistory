theme_minimal()
install.packages("Rtools")
install.packages("readxl")
library(readxl)
Nieuwbouw = read_xlsx("C:/Users/Badr/Downloads/Nieuwbouw.xlsx")
j2013 = as.numeric(Nieuwbouw0[24, 2])
install.packages("readxl")
install.packages("Rtools")
install.packages("readxl")
library(readxl)
install.packages("readxl")
Nieuwbouw = read_xlsx("C:/Users/Badr/Downloads/Nieuwbouw.xlsx")
EmissieDataSet = read_xlsx("C:/Users/Badr/Downloads/EmissieDataSet.xlsx")
Nieuwbouw0 <- Nieuwbouw[-1,]
j2012 = as.numeric(Nieuwbouw0[12, 2])
j2013 = as.numeric(Nieuwbouw0[24, 2])
j2014 = as.numeric(Nieuwbouw0[36, 2])
j2015 = as.numeric(Nieuwbouw0[48, 2])
j2016 = as.numeric(Nieuwbouw0[60, 2])
j2017 = as.numeric(Nieuwbouw0[72, 2])
library(tidyr)
library(ggplot2)
#1. Merge the cleaned tables of Energy Usage of Bouw and Landbouw for the years 2019-2023
combined_data <- merge(df_filtered_bouw, df_filtered_landbouw, by = "Perioden")
source("~/Documents/GitHub/PFE-Stikstof/EnergyUsage_Per_Year_Per_Sector.R")
source("~/Documents/GitHub/PFE-Stikstof/EnergyUsage_Per_Year_Per_Sector.R")
source("~/Documents/GitHub/PFE-Stikstof/EnergyUsage_Per_Year_Per_Sector.R")
library(ggplot2)
#1. Merge the cleaned tables of Energy Usage of Bouw and Landbouw for the years 2019-2023
combined_data <- merge(df_filtered_bouw, df_filtered_landbouw, by = "Perioden")
plot_data <- combined_data %>%
pivot_longer(
cols = c("Totaal energiedragers.x", "Totaal energiedragers.y", Onderwerp.x, Onderwerp.y),
names_to = c(".value", "set"),
names_pattern = "(.*)\\.(.)"
)
plot_data$`Totaal energiedragers` <- as.numeric(gsub(",", ".", plot_data$`Totaal energiedragers`))
plot_data$Sector <- ifelse(plot_data$set == "x", "Bouw", "Landbouw")
ggplot(plot_data, aes(x = factor(Perioden), y = `Totaal energiedragers`, fill = Onderwerp)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Energy Usage per Year per Sector",
x = "Year",
y = "Energy Usage (Pentajoule)",
fill = "Sector"
) +
theme_minimal()
library(tidyr)
library(ggplot2)
#1. Merge the cleaned tables of Emission of Bouw and Landbouw for the years 2019-2023
combined_data <- merge(DataSetEmissieCleanBouw, DataSetEmissieCleanLandbouw, by = "Jaar")
#2. Remove the 2015 row, because we start 2019 as the baseline measurement for our graph,
combined_data <- combined_data %>%
filter(Jaar != 2015)
plot_data <- combined_data %>%
pivot_longer(
cols = c(Emissie.x, Emissie.y, Sector.x, Sector.y),
names_to = c(".value", "set"),
names_pattern = "(.*)\\.(.)"
)
plot_data$Sector <- ifelse(plot_data$set == "x", "Bouw", "Landbouw")
ggplot(plot_data, aes(x = factor(Jaar), y = Emissie, fill = Sector)) +
scale_y_log10() +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Emission per Year per Sector",
x = "Year",
y = "Emission (kg)",
fill = "Sector"
) +
theme_minimal()
source("~/Documents/GitHub/PFE-Stikstof/Emission_Per_Year_Per_Sector.R")
library(tidyr)
library(ggplot2)
#1. Merge the cleaned tables of Emission of Bouw and Landbouw for the years 2019-2023
combined_data <- merge(DataSetEmissieCleanBouw, DataSetEmissieCleanLandbouw, by = "Jaar")
library(ggplot2)
#1. Merge the cleaned tables of Emission of Bouw and Landbouw for the years 2019-2023
combined_data <- merge(DataSetEmissieCleanBouw, DataSetEmissieCleanLandbouw, by = "Jaar")
install.packages("Rtools")
install.packages("readxl")
library(readxl)
Nieuwbouw = read_xlsx("C:/Users/Badr/Downloads/Nieuwbouw.xlsx")
library(tidyr)
library(ggplot2)
#1. Merge the cleaned tables of Emission of Bouw and Landbouw for the years 2019-2023
combined_data <- merge(DataSetEmissieCleanBouw, DataSetEmissieCleanLandbouw, by = "Jaar")
install.packages("readxl")
install.packages("Rtools")
install.packages("readxl")
library(readxl)
Nieuwbouw = read_xlsx("C:/Users/Badr/Downloads/Nieuwbouw.xlsx")
EmissieDataSet = read_xlsx("C:/Users/Badr/Downloads/EmissieDataSet.xlsx")
install.packages("Rtools")
install.packages("readxl")
library(readxl)
Nieuwbouw = read_xlsx("Nieuwbouw.xlsx")
EmissieDataSet = read_xlsx("EmissieDataSet.xlsx")
Nieuwbouw0 <- Nieuwbouw[-1,]
install.packages("readxl")
library(readxl)
install.packages(tidyverse)
install.packages("Rtools")
install.packages("tidyverse")
install.packages("Rtools")
install.packages("readxl")
library(readxl)
Nieuwbouw = read_xlsx("Nieuwbouw.xlsx")
EmissieDataSet = read_xlsx("EmissieDataSet.xlsx")
Nieuwbouw0 <- Nieuwbouw[-1,]
j2012 = as.numeric(Nieuwbouw0[12, 2])
j2013 = as.numeric(Nieuwbouw0[24, 2])
j2014 = as.numeric(Nieuwbouw0[36, 2])
j2015 = as.numeric(Nieuwbouw0[48, 2])
j2016 = as.numeric(Nieuwbouw0[60, 2])
j2017 = as.numeric(Nieuwbouw0[72, 2])
j2018 = as.numeric(Nieuwbouw0[84, 2])
j2019 = as.numeric(Nieuwbouw0[96, 2])
j2020 = as.numeric(Nieuwbouw0[108, 2])
j2021 = as.numeric(Nieuwbouw0[120, 2])
j2022 = as.numeric(Nieuwbouw0[132, 2])
j2023 = as.numeric(Nieuwbouw0[144, 2])
NieuwbouwClean = data.frame(
Jaar = c("2012", "2013", "2014", "2015", "2016", "2017",
"2018", "2019", "2020", "2021", "2022", "2023"),
Aantalwoningen = c(j2012, j2013, j2014, j2015, j2016, j2017, j2018, j2019, j2020, j2021, j2022, j2023)
)
View(NieuwbouwClean)
View(plot_data)
install.packages("readxl")
install.packages("readxl")
library(readxl)
Nieuwbouw = read_xlsx("Nieuwbouw.xlsx")
EmissieDataSet = read_xlsx("EmissieDataSet.xlsx")
View(EmissieDataSet)
Nieuwbouw0 <- Nieuwbouw[-1,]
j2012 = as.numeric(Nieuwbouw0[12, 2])
Nieuwbouw0 <- Nieuwbouw[-1,]
j2019 = as.numeric(Nieuwbouw0[96, 2])
j2020 = as.numeric(Nieuwbouw0[108, 2])
j2021 = as.numeric(Nieuwbouw0[120, 2])
j2022 = as.numeric(Nieuwbouw0[132, 2])
j2023 = as.numeric(Nieuwbouw0[144, 2])
NieuwbouwClean = data.frame(
Jaar = c("2012", "2013", "2014", "2015", "2016", "2017",
"2018", "2019", "2020", "2021", "2022", "2023"),
Aantalwoningen = c(j2012, j2013, j2014, j2015, j2016, j2017, j2018, j2019, j2020, j2021, j2022, j2023)
)
Nieuwbouw0 <- Nieuwbouw[-1,]
j2012 = as.numeric(Nieuwbouw0[12, 2])
j2013 = as.numeric(Nieuwbouw0[24, 2])
j2014 = as.numeric(Nieuwbouw0[36, 2])
j2015 = as.numeric(Nieuwbouw0[48, 2])
j2016 = as.numeric(Nieuwbouw0[60, 2])
j2017 = as.numeric(Nieuwbouw0[72, 2])
j2018 = as.numeric(Nieuwbouw0[84, 2])
j2019 = as.numeric(Nieuwbouw0[96, 2])
j2020 = as.numeric(Nieuwbouw0[108, 2])
j2021 = as.numeric(Nieuwbouw0[120, 2])
j2022 = as.numeric(Nieuwbouw0[132, 2])
j2023 = as.numeric(Nieuwbouw0[144, 2])
NieuwbouwClean = data.frame(
Jaar = c("2012", "2013", "2014", "2015", "2016", "2017",
"2018", "2019", "2020", "2021", "2022", "2023"),
Aantalwoningen = c(j2012, j2013, j2014, j2015, j2016, j2017, j2018, j2019, j2020, j2021, j2022, j2023)
)
View(NieuwbouwClean)
DataSetEmissie0 <- EmissieDataSet[,-10:-26]
DataSetEmissie1 <- DataSetEmissie0[-18:-41,-1:-7]
DataSetEmissieClean <- DataSetEmissie1[12:23,]
View(DataSetEmissieClean)
EnergieverbruikBouw0 <- EnergieverbruikBouw[-2,]
EnergieverbruikBouwClean <- EnergieverbruikBouw0[,-1]
rownames(EnergieverbruikBouwClean) = c("Periode", "Total usage build sector")
View(EnergieverbruikBouwClean)
EnergieverbruikLandbouw0 <- EnergieverbruikLandbouw[-2,]
EnergieverbruikLandbouwClean <- EnergieverbruikLandbouw0[,-1]
rownames(EnergieverbruikLandbouwClean) = c("Periode", "Total usage agriculture sector")
View(EnergieverbruikLandbouwClean)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("Rtools")
install.packages("readxl")
library(readxl)
Nieuwbouw = read_xlsx("Nieuwbouw.xlsx")
EmissieDataSet = read_xlsx("EmissieDataSet.xlsx")
Nieuwbouw0 <- Nieuwbouw[-1,]
j2012 = as.numeric(Nieuwbouw0[12, 2])
install.packages("readxl")
j2013 = as.numeric(Nieuwbouw0[24, 2])
j2014 = as.numeric(Nieuwbouw0[36, 2])
j2015 = as.numeric(Nieuwbouw0[48, 2])
j2016 = as.numeric(Nieuwbouw0[60, 2])
j2017 = as.numeric(Nieuwbouw0[72, 2])
j2018 = as.numeric(Nieuwbouw0[84, 2])
j2019 = as.numeric(Nieuwbouw0[96, 2])
j2020 = as.numeric(Nieuwbouw0[108, 2])
j2021 = as.numeric(Nieuwbouw0[120, 2])
j2022 = as.numeric(Nieuwbouw0[132, 2])
j2023 = as.numeric(Nieuwbouw0[144, 2])
NieuwbouwClean = data.frame(
Jaar = c("2012", "2013", "2014", "2015", "2016", "2017",
"2018", "2019", "2020", "2021", "2022", "2023"),
Aantalwoningen = c(j2012, j2013, j2014, j2015, j2016, j2017, j2018, j2019, j2020, j2021, j2022, j2023)
)
View(NieuwbouwClean)
library(tidyr)
library(ggplot2)
#1. Merge the cleaned tables of Emission of Bouw and Landbouw for the years 2019-2023
#combined_data <- merge(DataSetEmissieCleanBouw, DataSetEmissieCleanLandbouw, by = "Jaar")
combined_data <- DatasetCleanCode
#1. Merge the cleaned tables of Emission of Bouw and Landbouw for the years 2019-2023
#combined_data <- merge(DataSetEmissieCleanBouw, DataSetEmissieCleanLandbouw, by = "Jaar")
combined_data <- DataSetEmissieClean
plot_data <- combined_data %>%
pivot_longer(
cols = c(Emissie, Sector),
names_to = c(".value", "set"),
names_pattern = "(.*)\\.(.)"
)
ggplot(plot_data, aes(x = factor(Jaar), y = Emissie, fill = Sector)) +
scale_y_log10() +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Emission per Year per Sector",
x = "Year",
y = "Emission (kg)",
fill = "Sector"
) +
theme_minimal()
plot_data <- combined_data %>%
pivot_longer(
cols = c(Emissie, Sector),
names_to = c(".value", "set"),
names_pattern = "(.*)\\.(.)"
)
View(plot_data)
View(plot_data)
View(plot_data)
#1. Merge the cleaned tables of Emission of Bouw and Landbouw for the years 2019-2023
#combined_data <- merge(DataSetEmissieCleanBouw, DataSetEmissieCleanLandbouw, by = "Jaar")
combined_data <- DataSetEmissieClean
plot_data <- combined_data %>%
pivot_longer(
cols = c(Emissie, Sector),
names_to = c(".value", "set"),
names_pattern = "(.*)\\.(.)"
)
plot_data <- combined_data %>%
pivot_longer(
cols = c(Emissie, Sector),
names_to = c(".value", "set"),
names_pattern = "(.*)\\.(.)"
)
rlang::last_trace()
ggplot(combined_data, aes(x = factor(Jaar), y = Emissie, fill = Sector)) +
scale_y_log10() +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Emission per Year per Sector",
x = "Year",
y = "Emission (kg)",
fill = "Sector"
) +
theme_minimal()
source("~/Documents/GitHub/PFE-Stikstof/Emission_Per_Year_Per_Sector.R")
#1. Merge the cleaned tables of Emission of Bouw and Landbouw for the years 2019-2023
combined_data <- DataSetEmissieClean
ggplot(combined_data, aes(x = factor(Jaar), y = Emissie, fill = Sector)) +
scale_y_log10() +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Emission per Year per Sector",
x = "Year",
y = "Emission (kg)",
fill = "Sector"
) +
theme_minimal()
library(tidyr)
library(ggplot2)
#1. Merge the cleaned tables of Emission of Bouw and Landbouw for the years 2019-2023
combined_data <- DataSetEmissieClean
ggplot(combined_data, aes(x = factor(Jaar), y = Emissie, fill = Sector)) +
scale_y_log10() +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Emission per Year per Sector",
x = "Year",
y = "Emission (kg)",
fill = "Sector"
) +
theme_minimal()
View(DataSetEmissieClean)
View(DataSetEmissieClean)
View(DataSetEmissieClean)
# Make a double bar chart with the cleaned data set of Emission.
ggplot(DataSetEmissieClean, aes(x = factor(Jaar), y = Emissie, fill = Sector)) +
scale_y_log10() +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Emission per Year per Sector",
x = "Year",
y = "Emission (kg)",
fill = "Sector"
) +
theme_minimal()
library(tidyr)
library(ggplot2)
# Make a double bar chart with the cleaned data set of Emission.
ggplot(DataSetEmissieClean, aes(x = factor(Jaar), y = Emissie, fill = Sector)) +
scale_y_log10() +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Emission per Year per Sector",
x = "Year",
y = "Emission (kg)",
fill = "Sector"
) +
theme_minimal()
install.packages("tidyverse")
install.packages("Rtools")
install.packages("readxl")
library(readxl)
Nieuwbouw = read_xlsx("Nieuwbouw.xlsx")
EmissieDataSet = read_xlsx("EmissieDataSet.xlsx")
Nieuwbouw0 <- Nieuwbouw[-1,]
j2012 = as.numeric(Nieuwbouw0[12, 2])
j2013 = as.numeric(Nieuwbouw0[24, 2])
j2014 = as.numeric(Nieuwbouw0[36, 2])
j2015 = as.numeric(Nieuwbouw0[48, 2])
j2016 = as.numeric(Nieuwbouw0[60, 2])
j2017 = as.numeric(Nieuwbouw0[72, 2])
j2018 = as.numeric(Nieuwbouw0[84, 2])
j2019 = as.numeric(Nieuwbouw0[96, 2])
j2020 = as.numeric(Nieuwbouw0[108, 2])
j2021 = as.numeric(Nieuwbouw0[120, 2])
j2022 = as.numeric(Nieuwbouw0[132, 2])
j2023 = as.numeric(Nieuwbouw0[144, 2])
NieuwbouwClean = data.frame(
Jaar = c("2012", "2013", "2014", "2015", "2016", "2017",
"2018", "2019", "2020", "2021", "2022", "2023"),
Aantalwoningen = c(j2012, j2013, j2014, j2015, j2016, j2017, j2018, j2019, j2020, j2021, j2022, j2023)
)
View(NieuwbouwClean)
DataSetEmissie0 <- EmissieDataSet[,-10:-26]
DataSetEmissie1 <- DataSetEmissie0[-18:-41,-1:-7]
DataSetEmissieClean <- DataSetEmissie1[12:23,]
View(DataSetEmissieClean)
EnergieverbruikBouw0 <- EnergieverbruikBouw[-2,]
EnergieverbruikBouwClean <- EnergieverbruikBouw0[,-1]
rownames(EnergieverbruikBouwClean) = c("Periode", "Total usage build sector")
View(EnergieverbruikBouwClean)
EnergieverbruikLandbouw0 <- EnergieverbruikLandbouw[-2,]
EnergieverbruikLandbouwClean <- EnergieverbruikLandbouw0[,-1]
rownames(EnergieverbruikLandbouwClean) = c("Periode", "Total usage agriculture sector")
View(EnergieverbruikLandbouwClean)
View(DataSetEmissieClean)
View(NieuwbouwClean)
View(Nieuwbouw0)
View(Nieuwbouw)
View(NieuwbouwClean)
library(ggplot2)
#1. merge tables
merged_table <- merge(NieuwbouwClean, DataSetEmissieClean, by = "Jaar")
#2. remove the 2015 row, because we start 2019 as the baseline measurement for our graph
merged_table <- merged_table[-1, ]
#3. Loop over all the rows and check the previous "Aantalwoningen" and "Emissie" and get the %difference
df <- data.frame(
Jaar = merged_table$Jaar,
Aantalwoningen = merged_table$Aantalwoningen,
Emissie = merged_table$Emissie
)
# Added two extra columns that show the percental difference. We use -1 because the value in the last year 2023 cannot be compared
df$diff_Aantalwoningen <- c(NA, diff(df$Aantalwoningen) / head(df$Aantalwoningen, -1) * 100)
df$diff_Emissie <- c(NA, diff(df$Emissie) / head(df$Emissie, -1) * 100)
print(df)
#4. Manually create a long-format dataframe for plotting
Variable <- rep(c("Aantalwoningen % Diff", "Emissie % Diff"), each = nrow(df))
Jaar <- rep(df$Jaar, 2)
Percent_Diff <- c(df$diff_Aantalwoningen, df$diff_Emissie)
df_long <- data.frame(Jaar = Jaar, Variable = Variable, Percent_Diff = Percent_Diff)
#5. Make plot double bar chart per year for Aantalwoningen % Diff and Emissie % Diff
ggplot(df_long, aes(x = factor(Jaar), y = Percent_Diff, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray40") +
geom_text(aes(label = ifelse(is.na(Percent_Diff), "", round(Percent_Diff, 1))),
position = position_dodge(width = 0.8), vjust = -0.5, size = 3) +
labs(
title = "Year-over-Year Percentage Difference\nAantalwoningen and Emissie",
x = "Year",
y = "Percentage Difference (%)",
fill = "Variable"
) +
theme_minimal()
View(NieuwbouwClean)
View(DataSetEmissieClean)
View(DataSetEmissieClean)
View(DataSetEmissieClean)
View(DataSetEmissieClean)
only_bouw_clean <- filter(DataSetEmissieClean, DataSetEmissieClean$Sector == "Bouw")
only_bouw_clean <- filter(DataSetEmissieClean, DataSetEmissieClean$Sector == "Bouw")
#1. merge tables
merged_table <- merge(NieuwbouwClean, only_bouw_clean, by = "Jaar")
View(only_bouw_clean)
View(DataSetEmissieClean)
View(only_bouw_clean)
only_bouw_clean <- DataSetEmissieClean %>% filter(Sector == "Bouw")
library(dplyr)
library(tidyr)
library(ggplot2)
library(dplyr)
only_bouw_clean <- DataSetEmissieClean %>% filter(Sector == "Bouw")
View(only_bouw_clean)
#1. merge tables
merged_table <- merge(NieuwbouwClean, only_bouw_clean, by = "Jaar")
#2. remove the 2015 row, because we start 2019 as the baseline measurement for our graph
merged_table <- merged_table[-1, ]
#3. Loop over all the rows and check the previous "Aantalwoningen" and "Emissie" and get the %difference
df <- data.frame(
Jaar = merged_table$Jaar,
Aantalwoningen = merged_table$Aantalwoningen,
Emissie = merged_table$Emissie
)
# Added two extra columns that show the percental difference. We use -1 because the value in the last year 2023 cannot be compared
df$diff_Aantalwoningen <- c(NA, diff(df$Aantalwoningen) / head(df$Aantalwoningen, -1) * 100)
df$diff_Emissie <- c(NA, diff(df$Emissie) / head(df$Emissie, -1) * 100)
print(df)
#4. Manually create a long-format dataframe for plotting
Variable <- rep(c("Aantalwoningen % Diff", "Emissie % Diff"), each = nrow(df))
Jaar <- rep(df$Jaar, 2)
Percent_Diff <- c(df$diff_Aantalwoningen, df$diff_Emissie)
df_long <- data.frame(Jaar = Jaar, Variable = Variable, Percent_Diff = Percent_Diff)
#5. Make plot double bar chart per year for Aantalwoningen % Diff and Emissie % Diff
ggplot(df_long, aes(x = factor(Jaar), y = Percent_Diff, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray40") +
geom_text(aes(label = ifelse(is.na(Percent_Diff), "", round(Percent_Diff, 1))),
position = position_dodge(width = 0.8), vjust = -0.5, size = 3) +
labs(
title = "Year-over-Year Percentage Difference\nAantalwoningen and Emissie",
x = "Year",
y = "Percentage Difference (%)",
fill = "Variable"
) +
theme_minimal()
install.packages("tidyverse")
install.packages("Rtools")
install.packages("readxl")
library(readxl)
Nieuwbouw = read_xlsx("Nieuwbouw.xlsx")
EmissieDataSet = read_xlsx("EmissieDataSet.xlsx")
Nieuwbouw0 <- Nieuwbouw[-1,]
j2012 = as.numeric(Nieuwbouw0[12, 2])
j2013 = as.numeric(Nieuwbouw0[24, 2])
j2014 = as.numeric(Nieuwbouw0[36, 2])
j2015 = as.numeric(Nieuwbouw0[48, 2])
j2016 = as.numeric(Nieuwbouw0[60, 2])
j2017 = as.numeric(Nieuwbouw0[72, 2])
j2018 = as.numeric(Nieuwbouw0[84, 2])
j2019 = as.numeric(Nieuwbouw0[96, 2])
j2020 = as.numeric(Nieuwbouw0[108, 2])
j2021 = as.numeric(Nieuwbouw0[120, 2])
j2022 = as.numeric(Nieuwbouw0[132, 2])
j2023 = as.numeric(Nieuwbouw0[144, 2])
NieuwbouwClean = data.frame(
Jaar = c("2012", "2013", "2014", "2015", "2016", "2017",
"2018", "2019", "2020", "2021", "2022", "2023"),
Aantalwoningen = c(j2012, j2013, j2014, j2015, j2016, j2017, j2018, j2019, j2020, j2021, j2022, j2023)
)
View(NieuwbouwClean)
DataSetEmissie0 <- EmissieDataSet[,-10:-26]
DataSetEmissie1 <- DataSetEmissie0[-18:-41,-1:-7]
DataSetEmissieClean <- DataSetEmissie1[12:23,]
View(DataSetEmissieClean)
library(tidyr)
library(ggplot2)
library(dplyr)
only_bouw_clean <- DataSetEmissieClean %>% filter(Sector == "Bouw")
#1. merge tables
merged_table <- merge(NieuwbouwClean, only_bouw_clean, by = "Jaar")
#2. remove the 2015 row, because we start 2019 as the baseline measurement for our graph
merged_table <- merged_table[-1, ]
#3. Loop over all the rows and check the previous "Aantalwoningen" and "Emissie" and get the %difference
df <- data.frame(
Jaar = merged_table$Jaar,
Aantalwoningen = merged_table$Aantalwoningen,
Emissie = merged_table$Emissie
)
# Added two extra columns that show the percental difference. We use -1 because the value in the last year 2023 cannot be compared
df$diff_Aantalwoningen <- c(NA, diff(df$Aantalwoningen) / head(df$Aantalwoningen, -1) * 100)
df$diff_Emissie <- c(NA, diff(df$Emissie) / head(df$Emissie, -1) * 100)
print(df)
#4. Manually create a long-format dataframe for plotting
Variable <- rep(c("Aantalwoningen % Diff", "Emissie % Diff"), each = nrow(df))
Jaar <- rep(df$Jaar, 2)
Percent_Diff <- c(df$diff_Aantalwoningen, df$diff_Emissie)
df_long <- data.frame(Jaar = Jaar, Variable = Variable, Percent_Diff = Percent_Diff)
#5. Make plot double bar chart per year for Aantalwoningen % Diff and Emissie % Diff
ggplot(df_long, aes(x = factor(Jaar), y = Percent_Diff, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray40") +
geom_text(aes(label = ifelse(is.na(Percent_Diff), "", round(Percent_Diff, 1))),
position = position_dodge(width = 0.8), vjust = -0.5, size = 3) +
labs(
title = "Year-over-Year Percentage Difference\nAantalwoningen and Emissie",
x = "Year",
y = "Percentage Difference (%)",
fill = "Variable"
) +
theme_minimal()
setwd("/Users/ninazhang/Desktop/Practice_Exam-2")
View(city_budget)
